[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 1.8.0_231)
[debug]       Load.loadUnit: plugins took 131.3903ms
[debug]       Load.loadUnit: defsScala took 0.4727ms
[debug] [Loading] Scanning directory C:\Users\dell\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dell\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.7953 ms
[debug]           Load.resolveProject(global-plugins) took 62.7684ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\dell\.sbt\1.0\plugins, plugins: List(<none>))) took 127.1757ms
[debug] [Loading] Done in C:\Users\dell\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 153.5999ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2668ms
[debug]     Load.loadUnit(file:/C:/Users/dell/.sbt/1.0/plugins/, ...) took 293.8425ms
[debug]   Load.apply: load took 650.1067ms
[debug]   Load.apply: resolveProjects took 7.6819ms
[debug]   Load.apply: finalTransforms took 74.0114ms
[debug]   Load.apply: config.delegates took 11.3441ms
[debug]   Load.apply: Def.make(settings)... took 401.5172ms
[debug]   Load.apply: structureIndex took 122.1045ms
[debug]   Load.apply: mkStreams took 2.5401ms
[info] loading global plugins from C:\Users\dell\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3421.6102ms
[debug]           Load.loadUnit: plugins took 58.037ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\dell\IdeaProjects\SparkTest\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dell\IdeaProjects\SparkTest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.3025 ms
[debug]               Load.resolveProject(sparktest-build) took 2.0833ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparktest-build, base: C:\Users\dell\IdeaProjects\SparkTest\project, plugins: List(<none>))) took 6.9704ms
[debug] [Loading] Done in C:\Users\dell\IdeaProjects\SparkTest\project, returning: (sparktest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 9.2748ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0141ms
[debug]         Load.loadUnit(file:/C:/Users/dell/IdeaProjects/SparkTest/project/, ...) took 68.4793ms
[debug]       Load.apply: load took 70.4205ms
[debug]       Load.apply: resolveProjects took 0.1258ms
[debug]       Load.apply: finalTransforms took 48.4922ms
[debug]       Load.apply: config.delegates took 0.8499ms
[debug]       Load.apply: Def.make(settings)... took 143.799ms
[debug]       Load.apply: structureIndex took 30.6061ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\dell\IdeaProjects\SparkTest\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1909.2261ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\dell\IdeaProjects\SparkTest
[debug]       Load.loadUnit: mkEval took 10.8914ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6204 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.5502ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\dell\IdeaProjects\SparkTest, plugins: List(<none>))) took 7.4244ms
[debug] [Loading] Done in C:\Users\dell\IdeaProjects\SparkTest, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4437.2363ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.2189ms
[debug]   Load.loadUnit(file:/C:/Users/dell/IdeaProjects/SparkTest/, ...) took 6365.4566ms
[debug] Load.apply: load took 6367.3321ms
[debug] Load.apply: resolveProjects took 0.1216ms
[debug] Load.apply: finalTransforms took 9.5702ms
[debug] Load.apply: config.delegates took 0.4158ms
[debug] Load.apply: Def.make(settings)... took 80.3312ms
[debug] Load.apply: structureIndex took 27.3898ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to SparkTest (in build file:/C:/Users/dell/IdeaProjects/SparkTest/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-a95996d1fd33c7aa59aa
[debug] Writing bsp connection file
[info] started sbt server
